{
    "project": {
        "name": "dalek-reporter-html",
        "description": "HTML reporter for the Dalekjs testing framework",
        "version": "0.0.4",
        "url": "http://dalekjs.com"
    },
    "files": {
        "report/complexity/assets/scripts/vendor/codemirror/util/closetag.js": {
            "name": "report/complexity/assets/scripts/vendor/codemirror/util/closetag.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "report/complexity/assets/scripts/vendor/lodash.min.js": {
            "name": "report/complexity/assets/scripts/vendor/lodash.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "index.js": {
            "name": "index.js",
            "modules": {
                "Reporter": 1
            },
            "classes": {
                "Reporter": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Reporter": {
            "name": "Reporter",
            "submodules": {},
            "classes": {
                "Reporter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "index.js",
            "line": 35
        }
    },
    "classes": {
        "Reporter": {
            "name": "Reporter",
            "shortname": "Reporter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Reporter",
            "file": "index.js",
            "line": 35,
            "description": "The HTML reporter can produce a set of HTML files with the results of your testrun.\n\nThe reporter can be installed with the following command:\n\n```bash\n$ npm install dalek-reporter-html --save-dev\n```\n\nBy default the files will be written to the `report/dalek/` folder,\nyou can change this by adding a config option to the your Dalekfile\n\n```javascript\n\"html-reporter\": {\n  \"dest\": \"your/folder\"\n}\n```\n\nIf you would like to use the reporter (in addition to the std. console reporter),\nyou can start dalek with a special command line argument\n\n```bash\n$ dalek your_test.js -r console,html\n```\n\nor you can add it to your Dalekfile\n\n```javascript\n\"reporter\": [\"console\", \"html\"]\n```",
            "is_constructor": 1,
            "part": "html",
            "api": ""
        }
    },
    "classitems": [
        {
            "file": "report/complexity/assets/scripts/vendor/codemirror/util/closetag.js",
            "line": 1,
            "description": "Tag-closer extension for CodeMirror.\n\nThis extension adds an \"autoCloseTags\" option that can be set to\neither true to get the default behavior, or an object to further\nconfigure its behavior.\n\nThese are supported options:\n\n`whenClosing` (default true)\n  Whether to autoclose when the '/' of a closing tag is typed.\n`whenOpening` (default true)\n  Whether to autoclose the tag when the final '>' of an opening\n  tag is typed.\n`dontCloseTags` (default is empty tags for HTML, none for XML)\n  An array of tag names that should not be autoclosed.\n`indentTags` (default is block tags for HTML, none for XML)\n  An array of tag names that should, when opened, cause a\n  blank line to be added inside the tag, and the blank line and\n  closing line to be indented.\n\nSee demos/closetag.html for a usage example.",
            "class": "Reporter"
        },
        {
            "file": "report/complexity/assets/scripts/vendor/lodash.min.js",
            "line": 1,
            "license": "Lo-Dash 2.4.1 (Custom Build) lodash.com/license | Underscore.js 1.5.2 underscorejs.org/LICENSE\nBuild: `lodash modern -o ./dist/lodash.js`",
            "class": "Reporter"
        },
        {
            "file": "index.js",
            "line": 100,
            "description": "Inits the html buffer objects",
            "itemtype": "method",
            "name": "initOutputHandlers",
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 113,
            "description": "Loads and prepares all the templates for\nCSS, JS & HTML",
            "itemtype": "method",
            "name": "loadTemplates",
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 151,
            "description": "Connects to all the event listeners",
            "itemtype": "method",
            "name": "startListening",
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 174,
            "description": "Prepares the output for a test detail page",
            "itemtype": "method",
            "name": "startDetailPage",
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 187,
            "description": "Adds an action output to the detail page",
            "itemtype": "method",
            "name": "addActionToDetailPage",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 201,
            "description": "Adds an assertion result to the detail page",
            "itemtype": "method",
            "name": "addAssertionToDetailPage",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 215,
            "description": "Writes a detail page to the file system",
            "itemtype": "method",
            "name": "finishDetailPage",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 231,
            "description": "Stores the current browser name",
            "itemtype": "method",
            "name": "outputRunBrowser",
            "params": [
                {
                    "name": "browser",
                    "description": "Browser name",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 244,
            "description": "Writes the index page to the filesystem",
            "itemtype": "method",
            "name": "outputRunnerFinished",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 280,
            "description": "Pushes an assertion result to the index output queue",
            "itemtype": "method",
            "name": "outputAssertionResult",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 293,
            "description": "Pushes an test result to the index output queue",
            "itemtype": "method",
            "name": "outputTestFinished",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 309,
            "description": "Helper method to generate deeper nested directory structures",
            "itemtype": "method",
            "name": "_recursiveMakeDirSync",
            "params": [
                {
                    "name": "path",
                    "description": "PAth to create",
                    "type": "String"
                }
            ],
            "class": "Reporter",
            "module": "Reporter"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: license",
            "line": " report/complexity/assets/scripts/vendor/lodash.min.js:1"
        },
        {
            "message": "unknown tag: part",
            "line": " index.js:35"
        },
        {
            "message": "unknown tag: api",
            "line": " index.js:35"
        },
        {
            "message": "Missing item type\nTag-closer extension for CodeMirror.\n\nThis extension adds an \"autoCloseTags\" option that can be set to\neither true to get the default behavior, or an object to further\nconfigure its behavior.\n\nThese are supported options:\n\n`whenClosing` (default true)\n  Whether to autoclose when the '/' of a closing tag is typed.\n`whenOpening` (default true)\n  Whether to autoclose the tag when the final '>' of an opening\n  tag is typed.\n`dontCloseTags` (default is empty tags for HTML, none for XML)\n  An array of tag names that should not be autoclosed.\n`indentTags` (default is block tags for HTML, none for XML)\n  An array of tag names that should, when opened, cause a\n  blank line to be added inside the tag, and the blank line and\n  closing line to be indented.\n\nSee demos/closetag.html for a usage example.",
            "line": " report/complexity/assets/scripts/vendor/codemirror/util/closetag.js:1"
        },
        {
            "message": "Missing item type",
            "line": " report/complexity/assets/scripts/vendor/lodash.min.js:1"
        }
    ]
}