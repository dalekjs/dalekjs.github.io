{
    "project": {
        "name": "dalek-reporter-junit",
        "description": "jUnit reporter for the Dalekjs testing framework",
        "version": "0.0.2",
        "url": "http://dalekjs.com"
    },
    "files": {
        "index.js": {
            "name": "index.js",
            "modules": {
                "Reporter": 1
            },
            "classes": {
                "Reporter": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Reporter": {
            "name": "Reporter",
            "submodules": {},
            "classes": {
                "Reporter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "index.js",
            "line": 35
        }
    },
    "classes": {
        "Reporter": {
            "name": "Reporter",
            "shortname": "Reporter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Reporter",
            "file": "index.js",
            "line": 35,
            "description": "The jUnit reporter can produce a jUnit compatible file with the results of your testrun,\nthis reporter enables you to use daleks testresults within a CI environment like Jenkins.\n\nThe reporter can be installed with the following command:\n\n```bash\n$ npm install dalek-reporter-junit --save-dev\n```\n\nThe file will follow the jUnit XML format:\n\n```html\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<resource name=\"DalekJSTest\">\n    <testsuite start=\"1375125067\" name=\"Click - DalekJS guinea pig [Phantomjs]\" end=\"1375125067\" totalTests=\"1\">\n        <testcase start=\"1375125067\" name=\"Can click a select option (OK, jQuery style, no message)\" end=\"1375125067\" result=\"pass\">\n            <variation start=\"1375125067\" name=\"val\" end=\"1375125067\">\n                <severity>pass</severity>\n                <description>&lt;![CDATA[David is the favourite]]&gt;</description>\n                <resource>DalekJSTest</resource>\n            </variation>\n            <variation start=\"1375125067\" name=\"val\" end=\"1375125067\">\n                <severity>pass</severity>\n                <description>&lt;![CDATA[Matt is now my favourite, bow ties are cool]]&gt;</description>\n                <resource>DalekJSTest</resource>\n            </variation>\n        </testcase>\n    </testsuite>\n </resource>\n```\n\nBy default the file will be written to `report/dalek.xml`,\nyou can change this by adding a config option to the your Dalekfile\n\n```javascript\n\"junit-reporter\": {\n  \"dest\": \"your/folder/your_file.xml\"\n}\n```\n\nIf you would like to use the reporter (in addition to the std. console reporter),\nyou can start dalek with a special command line argument\n\n```bash\n$ dalek your_test.js -r console,junit\n```\n\nor you can add it to your Dalekfile\n\n```javascript\n\"reporter\": [\"console\", \"junit\"]\n```",
            "is_constructor": 1,
            "part": "JUnit",
            "api": ""
        }
    },
    "classitems": [
        {
            "file": "index.js",
            "line": 136,
            "description": "Connects to all the event listeners",
            "itemtype": "method",
            "name": "startListening",
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 154,
            "description": "Stores the current browser name",
            "itemtype": "method",
            "name": "runBrowser",
            "params": [
                {
                    "name": "browser",
                    "description": "Browser name",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 167,
            "description": "Generates XML skeleton for testsuites",
            "itemtype": "method",
            "name": "testsuiteStarted",
            "params": [
                {
                    "name": "name",
                    "description": "Testsuite name",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 188,
            "description": "Finishes XML skeleton for testsuites",
            "itemtype": "method",
            "name": "testsuiteFinished",
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 200,
            "description": "Generates XML skeleton for an assertion",
            "itemtype": "method",
            "name": "assertion",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 229,
            "description": "Generates XML skeleton for a testcase",
            "itemtype": "method",
            "name": "testStarted",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 251,
            "description": "Finishes XML skeleton for a testcase",
            "itemtype": "method",
            "name": "testFinished",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 280,
            "description": "Finishes XML and writes file to the file system",
            "itemtype": "method",
            "name": "runnerFinished",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 306,
            "description": "Helper method to generate deeper nested directory structures",
            "itemtype": "method",
            "name": "_recursiveMakeDirSync",
            "params": [
                {
                    "name": "path",
                    "description": "PAth to create",
                    "type": "String"
                }
            ],
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 330,
            "description": "Helper method to check if attributes should be set to an empty object literal",
            "itemtype": "method",
            "name": "_checkNodeAttributes",
            "params": [
                {
                    "name": "testIdx",
                    "description": "Id of the test node",
                    "type": "String"
                },
                {
                    "name": "testCount",
                    "description": "Id of the child node",
                    "type": "String"
                },
                {
                    "name": "variationCount",
                    "description": "Id of the testCount child node",
                    "type": "String"
                }
            ],
            "class": "Reporter",
            "module": "Reporter"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: part",
            "line": " index.js:35"
        },
        {
            "message": "unknown tag: api",
            "line": " index.js:35"
        }
    ]
}