{
    "project": {
        "name": "dalek-browser-phantomjs",
        "description": "PhantomJS binding for DalekJS",
        "version": "0.0.4",
        "url": ""
    },
    "files": {
        "index.js": {
            "name": "index.js",
            "modules": {
                "DalekJS": 1
            },
            "classes": {
                "Browser.PhantomJSDriver": 1
            },
            "fors": {},
            "namespaces": {
                "Browser": 1
            }
        }
    },
    "modules": {
        "DalekJS": {
            "name": "DalekJS",
            "submodules": {},
            "classes": {
                "Browser.PhantomJSDriver": 1
            },
            "fors": {},
            "namespaces": {
                "Browser": 1
            },
            "tag": "module",
            "file": "index.js",
            "line": 34,
            "description": "This module is a browser plugin for [DalekJS](//github.com/dalekjs/dalek).\nIt provides a browser launcher as well the PhantomJS browser itself.\n\nThe browser plugin comes bundled with the DalekJS base framework.\n\nYou can use the browser plugin beside others (it is the default)\nby adding a config option to the your Dalekfile:\n\n```javascript\n\"browser\": [\"phantomjs\", \"chrome\"]\n```\n\nOr you can tell Dalek that it should test in this & another browser via the command line:\n\n```bash\n$ dalek mytest.js -b phantomjs,chrome\n```\n\nThe Webdriver Server tries to open Port 9001 by default,\nif this port is blocked, it tries to use a port between 9002 & 9091\nYou can specifiy a different port from within your [Dalekfile](/pages/config.html) like so:\n\n```javascript\n\"browsers\": {\n  \"phantomjs\": {\n    \"port\": 5555 \n  }\n}\n```\n\nIt is also possible to specify a range of ports:\n\n```javascript\n\"browsers\": {\n  \"phantomjs\": {\n    \"portRange\": [6100, 6120] \n  }\n}\n```\n\nIf you would like to use a different Phantom version than the one that comes bundled with the driver,\nyour are able to specify its location in your [Dalekfile](/pages/config.html):\n\n```javascript\n\"browsers\": {\n  \"phantomjs\": {\n    \"binary\": \"~/bin/phantomjs\" \n  }\n}\n```\n\nIf you would like to preserve the ability to use the bundled version,\nyou can also add an additional browser launcher in your [Dalekfile](/pages/config.html).\n\n```javascript\n\"browsers\": {\n  \"phantomjs:1.9.1\": {\n    \"binary\": \"~/bin/phantomjs\" \n  }\n}\n```\n\nAnd then launch it like this:\n\n```bash\n$ dalek mytest.js -b phantomjs:1.9.1\n```",
            "part": "PhantomJS",
            "api": ""
        }
    },
    "classes": {
        "Browser.PhantomJSDriver": {
            "name": "Browser.PhantomJSDriver",
            "shortname": "Browser.PhantomJSDriver",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DalekJS",
            "namespace": "Browser",
            "file": "index.js",
            "line": 34,
            "description": "This module is a browser plugin for [DalekJS](//github.com/dalekjs/dalek).\nIt provides a browser launcher as well the PhantomJS browser itself.\n\nThe browser plugin comes bundled with the DalekJS base framework.\n\nYou can use the browser plugin beside others (it is the default)\nby adding a config option to the your Dalekfile:\n\n```javascript\n\"browser\": [\"phantomjs\", \"chrome\"]\n```\n\nOr you can tell Dalek that it should test in this & another browser via the command line:\n\n```bash\n$ dalek mytest.js -b phantomjs,chrome\n```\n\nThe Webdriver Server tries to open Port 9001 by default,\nif this port is blocked, it tries to use a port between 9002 & 9091\nYou can specifiy a different port from within your [Dalekfile](/pages/config.html) like so:\n\n```javascript\n\"browsers\": {\n  \"phantomjs\": {\n    \"port\": 5555 \n  }\n}\n```\n\nIt is also possible to specify a range of ports:\n\n```javascript\n\"browsers\": {\n  \"phantomjs\": {\n    \"portRange\": [6100, 6120] \n  }\n}\n```\n\nIf you would like to use a different Phantom version than the one that comes bundled with the driver,\nyour are able to specify its location in your [Dalekfile](/pages/config.html):\n\n```javascript\n\"browsers\": {\n  \"phantomjs\": {\n    \"binary\": \"~/bin/phantomjs\" \n  }\n}\n```\n\nIf you would like to preserve the ability to use the bundled version,\nyou can also add an additional browser launcher in your [Dalekfile](/pages/config.html).\n\n```javascript\n\"browsers\": {\n  \"phantomjs:1.9.1\": {\n    \"binary\": \"~/bin/phantomjs\" \n  }\n}\n```\n\nAnd then launch it like this:\n\n```bash\n$ dalek mytest.js -b phantomjs:1.9.1\n```"
        }
    },
    "classitems": [
        {
            "file": "index.js",
            "line": 112,
            "description": "Verbose version of the browser name",
            "itemtype": "property",
            "name": "",
            "type": "string",
            "default": "PhantomJS",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 122,
            "description": "Default port of the PhantomJSDriver\nThe port may change, cause the port conflict resultion\ntool might pick another one, if the default one is blocked",
            "itemtype": "property",
            "name": "",
            "type": "integer",
            "default": "9001",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 134,
            "description": "Default maximum port of the Ghostdriver Server\nThe port is the highest port in the range that can be allocated\nby the Ghostdriver Server",
            "itemtype": "property",
            "name": "maxPort",
            "type": "integer",
            "default": "9091",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 146,
            "description": "Default host of the PhantomJSDriver\nThe host may be overriden with\na user configured value",
            "itemtype": "property",
            "name": "",
            "type": "string",
            "default": "localhost",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 158,
            "description": "Root path of the PhantomJSDriver",
            "itemtype": "property",
            "name": "",
            "type": "string",
            "default": "/wd/hub",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 168,
            "description": "Default desired capabilities that should be\ntransferred when the browser session gets requested",
            "itemtype": "property",
            "name": "desiredCapabilities",
            "type": "object",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 181,
            "description": "Driver defaults, what should the driver be able to access.",
            "itemtype": "property",
            "name": "driverDefaults",
            "type": "object",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 194,
            "description": "Child process instance of the PhantomJS browser",
            "itemtype": "property",
            "name": "",
            "type": "null|Object",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 203,
            "description": "Resolves the driver port",
            "itemtype": "method",
            "name": "getPort",
            "return": {
                "description": "integer"
            },
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 214,
            "description": "Resolves the maximum range for the driver port",
            "itemtype": "method",
            "name": "getMaxPort",
            "return": {
                "description": "port Max WebDriver server port range",
                "type": "Integer"
            },
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 225,
            "description": "Returns the driver host",
            "itemtype": "method",
            "name": "getHost",
            "type": "string",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 236,
            "description": "Launches PhantomJS, negoatiates a port & checks for a user set binary",
            "itemtype": "method",
            "name": "launch",
            "params": [
                {
                    "name": "configuration",
                    "description": "Browser configuration",
                    "type": "Object"
                },
                {
                    "name": "events",
                    "description": "EventEmitter (Reporter Emitter instance)",
                    "type": "EventEmitter2"
                },
                {
                    "name": "config",
                    "description": "Dalek configuration class",
                    "type": "Dalek.Internal.Config"
                }
            ],
            "return": {
                "description": "promise Browser promise",
                "type": "Object"
            },
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 265,
            "description": "Kills the PhantomJSDriver processe",
            "itemtype": "method",
            "name": "kill",
            "chainable": 1,
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 277,
            "description": "Checks if the def. port is blocked & if we need to switch to another port\nKicks off the process manager (for closing the opened browsers after the run has been finished)\nAlso starts the chromedriver instance",
            "itemtype": "method",
            "name": "_checkPorts",
            "params": [
                {
                    "name": "deferred",
                    "description": "Promise",
                    "type": "Object"
                },
                {
                    "name": "error",
                    "description": "Error object",
                    "type": "Null|object"
                },
                {
                    "name": "port",
                    "description": "Found open port",
                    "type": "Integer"
                }
            ],
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 306,
            "description": "Checks the data stream from the launched phantom process",
            "itemtype": "method",
            "name": "_launch",
            "params": [
                {
                    "name": "deferred",
                    "description": "Promise",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Console output from Ghostdriver",
                    "type": "Buffer"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 331,
            "description": "Process user defined ports",
            "itemtype": "method",
            "name": "_checkUserDefinedPorts",
            "params": [
                {
                    "name": "browser",
                    "description": "Browser configuration",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 358,
            "description": "Checks if the binary exists,\nwhen set manually by the user",
            "itemtype": "method",
            "name": "_checkUserDefinedBinary",
            "params": [
                {
                    "name": "binary",
                    "description": "Path to the browser binary",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Binary path if binary exists, else false",
                "type": "Bool|string"
            },
            "access": "private",
            "tagname": "",
            "class": "Browser.PhantomJSDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: part",
            "line": " index.js:34"
        },
        {
            "message": "unknown tag: api",
            "line": " index.js:34"
        }
    ]
}