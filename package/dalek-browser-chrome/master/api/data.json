{
    "project": {
        "name": "dalek-browser-chrome",
        "description": "Google Chrome bindings for DalekJS",
        "version": "0.0.10",
        "url": "http://dalekjs.com"
    },
    "files": {
        "lib/chromedriver.js": {
            "name": "lib/chromedriver.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "index.js": {
            "name": "index.js",
            "modules": {
                "DalekJS": 1
            },
            "classes": {
                "Browser.ChromeDriver": 1
            },
            "fors": {},
            "namespaces": {
                "Browser": 1
            }
        }
    },
    "modules": {
        "DalekJS": {
            "name": "DalekJS",
            "submodules": {},
            "classes": {
                "Browser.ChromeDriver": 1
            },
            "fors": {},
            "namespaces": {
                "Browser": 1
            },
            "tag": "module",
            "file": "index.js",
            "line": 36,
            "description": "This module is a browser plugin for [DalekJS](//github.com/dalekjs/dalek).\nIt provides all a WebDriverServer & browser launcher for Google Chrome.\n\nThe browser plugin can be installed with the following command:\n\n```bash\n$ npm install dalek-browser-chrome --save-dev\n```\n\nYou can use the browser plugin by adding a config option to the your [Dalekfile](/pages/config.html)\n\n```javascript\n\"browser\": [\"chrome\"]\n```\n\nOr you can tell Dalek that it should test in this browser via the command line:\n\n```bash\n$ dalek mytest.js -b chrome\n```\n\nThe Webdriver Server tries to open Port 9002 by default,\nif this port is blocked, it tries to use a port between 9003 & 9092\nYou can specifiy a different port from within your [Dalekfile](/pages/config.html) like so:\n\n```javascript\n\"browsers\": [{\n  \"chrome\": {\n    \"port\": 5555 \n  }\n}]\n```\n\nIt is also possible to specify a range of ports:\n\n```javascript\n\"browsers\": [{\n  \"chrome\": {\n    \"portRange\": [6100, 6120] \n  }\n}]\n```\n\nIf you would like to test Chrome Canary oder Chromium releases, you can simply apply a snd. argument,\nwhich defines the browser type:\n\n```bash\n$ dalek mytest.js -b chrome:canary\n```\n\nfor canary, and if you would like to use chromium, just append `:chromium`:\n\n```bash\n$ dalek mytest.js -b chrome:chromium\n```\n\nThis will only work if you installed your browser in the default locations,\nif the browsers binary is located in a non default location, you are able to specify\nits location in your [Dalekfile](/pages/config.html):\n\n```javascript\n\"browsers\": [{\n  \"chrome\": {\n    \"binary\": \"/Applications/Custom Located Chrome.app/MacOS/Contents/Chrome\" \n  }\n}]\n```\n\nThis also works for the canary &amp; chromium builds\n\n```javascript\n\"browsers\": [{\n  \"chrome\": {\n    \"binary\": \"/Applications/Custom Located Chrome.app/MacOS/Contents/Chrome\" \n  }\n}]\n```",
            "part": "Chrome",
            "api": ""
        }
    },
    "classes": {
        "Browser.ChromeDriver": {
            "name": "Browser.ChromeDriver",
            "shortname": "Browser.ChromeDriver",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "DalekJS",
            "namespace": "Browser",
            "file": "index.js",
            "line": 36,
            "description": "This module is a browser plugin for [DalekJS](//github.com/dalekjs/dalek).\nIt provides all a WebDriverServer & browser launcher for Google Chrome.\n\nThe browser plugin can be installed with the following command:\n\n```bash\n$ npm install dalek-browser-chrome --save-dev\n```\n\nYou can use the browser plugin by adding a config option to the your [Dalekfile](/pages/config.html)\n\n```javascript\n\"browser\": [\"chrome\"]\n```\n\nOr you can tell Dalek that it should test in this browser via the command line:\n\n```bash\n$ dalek mytest.js -b chrome\n```\n\nThe Webdriver Server tries to open Port 9002 by default,\nif this port is blocked, it tries to use a port between 9003 & 9092\nYou can specifiy a different port from within your [Dalekfile](/pages/config.html) like so:\n\n```javascript\n\"browsers\": [{\n  \"chrome\": {\n    \"port\": 5555 \n  }\n}]\n```\n\nIt is also possible to specify a range of ports:\n\n```javascript\n\"browsers\": [{\n  \"chrome\": {\n    \"portRange\": [6100, 6120] \n  }\n}]\n```\n\nIf you would like to test Chrome Canary oder Chromium releases, you can simply apply a snd. argument,\nwhich defines the browser type:\n\n```bash\n$ dalek mytest.js -b chrome:canary\n```\n\nfor canary, and if you would like to use chromium, just append `:chromium`:\n\n```bash\n$ dalek mytest.js -b chrome:chromium\n```\n\nThis will only work if you installed your browser in the default locations,\nif the browsers binary is located in a non default location, you are able to specify\nits location in your [Dalekfile](/pages/config.html):\n\n```javascript\n\"browsers\": [{\n  \"chrome\": {\n    \"binary\": \"/Applications/Custom Located Chrome.app/MacOS/Contents/Chrome\" \n  }\n}]\n```\n\nThis also works for the canary &amp; chromium builds\n\n```javascript\n\"browsers\": [{\n  \"chrome\": {\n    \"binary\": \"/Applications/Custom Located Chrome.app/MacOS/Contents/Chrome\" \n  }\n}]\n```"
        }
    },
    "classitems": [
        {
            "file": "lib/chromedriver.js",
            "line": 3,
            "fileoverview": "Helpers made available via require('dalek-browser-chrome') once package is\ninstalled.",
            "class": "Browser.ChromeDriver"
        },
        {
            "file": "lib/chromedriver.js",
            "line": 10,
            "description": "Where the chromedriver binary can be found.",
            "type": "{string}",
            "class": "Browser.ChromeDriver"
        },
        {
            "file": "lib/chromedriver.js",
            "line": 19,
            "description": "The version of chromedriver installed by this package.",
            "type": "{number}",
            "class": "Browser.ChromeDriver"
        },
        {
            "file": "index.js",
            "line": 124,
            "description": "Verbose version of the browser name",
            "itemtype": "property",
            "name": "longName",
            "type": "string",
            "default": "Google Chrome",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 134,
            "description": "Default port of the ChromeWebDriverServer\nThe port may change, cause the port conflict resolution\ntool might pick another one, if the default one is blocked",
            "itemtype": "property",
            "name": "port",
            "type": "integer",
            "default": "9002",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 146,
            "description": "Default maximum port of the ChromeWebDriverServer\nThe port is the highest port in the range that can be allocated\nby the ChromeWebDriverServer",
            "itemtype": "property",
            "name": "maxPort",
            "type": "integer",
            "default": "9092",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 158,
            "description": "Default host of the ChromeWebDriverServer\nThe host may be overridden with\na user configured value",
            "itemtype": "property",
            "name": "host",
            "type": "string",
            "default": "localhost",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 170,
            "description": "Default desired capabilities that should be\ntransferred when the browser session gets requested",
            "itemtype": "property",
            "name": "desiredCapabilities",
            "type": "object",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 183,
            "description": "Driver defaults, what should the driver be able to access.",
            "itemtype": "property",
            "name": "driverDefaults",
            "type": "object",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 196,
            "description": "Root path of the ChromeWebDriverServer",
            "itemtype": "property",
            "name": "path",
            "type": "string",
            "default": "/wd/hub",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 206,
            "description": "Child process instance of the Chrome browser",
            "itemtype": "property",
            "name": "spawned",
            "type": "null|Object",
            "default": "null",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 216,
            "description": "Chrome processes that are running on startup,\nand therefor shouldn`t be closed",
            "itemtype": "property",
            "name": "openProcesses",
            "type": "array",
            "default": "[]",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 227,
            "description": "Name of the process (platform dependent)\nthat represents the browser itself",
            "itemtype": "property",
            "name": "processName",
            "type": "string",
            "default": "chrome.exe / Chrome",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 238,
            "description": "Different browser types (Canary / Chromium) that can be controlled\nvia the Chromedriver",
            "itemtype": "property",
            "name": "browserTypes",
            "type": "object",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 248,
            "description": "Chrome Canary",
            "itemtype": "property",
            "name": "canary",
            "type": "object",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 262,
            "description": "Chromium",
            "itemtype": "property",
            "name": "chromium",
            "type": "object",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 278,
            "description": "Resolves the driver port",
            "itemtype": "method",
            "name": "getPort",
            "return": {
                "description": "port WebDriver server port",
                "type": "Integer"
            },
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 289,
            "description": "Resolves the maximum range for the driver port",
            "itemtype": "method",
            "name": "getMaxPort",
            "return": {
                "description": "port Max WebDriver server port range",
                "type": "Integer"
            },
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 300,
            "description": "Returns the driver host",
            "itemtype": "method",
            "name": "getHost",
            "return": {
                "description": "host WebDriver server hostname",
                "type": "String"
            },
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 311,
            "description": "Launches the ChromeWebDriverServer\n(which implicitly launches Chrome itself)\nand checks for an available port",
            "itemtype": "method",
            "name": "launch",
            "params": [
                {
                    "name": "configuration",
                    "description": "Browser configuration",
                    "type": "Object"
                },
                {
                    "name": "events",
                    "description": "EventEmitter (Reporter Emitter instance)",
                    "type": "EventEmitter2"
                },
                {
                    "name": "config",
                    "description": "Dalek configuration class",
                    "type": "Dalek.Internal.Config"
                }
            ],
            "return": {
                "description": "promise Browser promise",
                "type": "Object"
            },
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 358,
            "description": "Kills the ChromeWebDriverServer\n& Chrome browser processes",
            "itemtype": "method",
            "name": "kill",
            "chainable": 1,
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 371,
            "description": "Modifies the verbose browser name",
            "itemtype": "method",
            "name": "_modifyVerboseBrowserName",
            "params": [
                {
                    "name": "configuration",
                    "description": "User configuration",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Verbose browser name",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 388,
            "description": "Change the process name for browser instances like Canary &amp; Chromium",
            "itemtype": "method",
            "name": "_fetchProcessName",
            "params": [
                {
                    "name": "configuration",
                    "description": "User configuration",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Verbose browser name",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 406,
            "description": "Process user defined ports",
            "itemtype": "method",
            "name": "_checkUserDefinedPorts",
            "params": [
                {
                    "name": "browser",
                    "description": "Browser configuration",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 433,
            "description": "Checks if the binary exists,\nwhen set manually by the user",
            "itemtype": "method",
            "name": "_checkUserDefinedBinary",
            "params": [
                {
                    "name": "binary",
                    "description": "Path to the browser binary",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Binary exists",
                "type": "Bool"
            },
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 462,
            "description": "Checks if the def. port is blocked & if we need to switch to another port\nKicks off the process manager (for closing the opened browsers after the run has been finished)\nAlso starts the chromedriver instance",
            "itemtype": "method",
            "name": "_checkPorts",
            "params": [
                {
                    "name": "deferred",
                    "description": "Promise",
                    "type": "Object"
                },
                {
                    "name": "error",
                    "description": "Error object",
                    "type": "Null|object"
                },
                {
                    "name": "port",
                    "description": "Found open port",
                    "type": "Integer"
                }
            ],
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 487,
            "description": "Spawns an instance of Chromedriver",
            "itemtype": "method",
            "name": "_startChromedriver",
            "params": [
                {
                    "name": "deferred",
                    "description": "Promise",
                    "type": "Object"
                },
                {
                    "name": "error",
                    "description": "Error object",
                    "type": "Null|object"
                },
                {
                    "name": "result",
                    "description": "List of open chrome processes BEFORE the test browser has been launched",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 506,
            "description": "Watches the chromedriver console output to capture the starting message",
            "itemtype": "method",
            "name": "_catchDriverLogs",
            "params": [
                {
                    "name": "deferred",
                    "description": "Promise",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "Chromedriver console output",
                    "type": "Buffer"
                }
            ],
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 541,
            "description": "Remove the chromedriver log that is written to the current working directory",
            "itemtype": "method",
            "name": "_unlinkChromedriverLog",
            "params": [
                {
                    "name": "retry",
                    "description": "Delete has been tried min 1 time before",
                    "type": "Bool"
                }
            ],
            "access": "private",
            "tagname": "",
            "chainable": 1,
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 565,
            "description": "Tracks running browser processes for chrome on mac & linux",
            "itemtype": "method",
            "name": "_processes",
            "params": [
                {
                    "name": "platform",
                    "description": "Current OS",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "Callback",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 585,
            "description": "Kills all associated processes",
            "itemtype": "method",
            "name": "_checkProcesses",
            "params": [
                {
                    "name": "err",
                    "description": "Error object or null",
                    "type": "Object|null"
                },
                {
                    "name": "result",
                    "description": "List of running processes",
                    "type": "Array"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 610,
            "description": "Kills a process",
            "itemtype": "method",
            "name": "_killNix",
            "params": [
                {
                    "name": "processID",
                    "description": "Process ID",
                    "type": "Integer"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 635,
            "description": "Lists all chrome processes on *NIX systems",
            "itemtype": "method",
            "name": "_processesNix",
            "params": [
                {
                    "name": "fn",
                    "description": "Calback",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 651,
            "description": "Deserializes a process list on nix",
            "itemtype": "method",
            "name": "_processListNix",
            "params": [
                {
                    "name": "fn",
                    "description": "Calback",
                    "type": "Function"
                },
                {
                    "name": "err",
                    "description": "Error object",
                    "type": "Object|null"
                },
                {
                    "name": "stdout",
                    "description": "Output of the process list shell command",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 669,
            "description": "Reformats the process list output on *NIX systems",
            "itemtype": "method",
            "name": "_splitProcessListNix",
            "params": [
                {
                    "name": "result",
                    "description": "Reference to the process list",
                    "type": "Array"
                },
                {
                    "name": "line",
                    "description": "Single process in text representation",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 686,
            "description": "Filters empty process list entries on *NIX",
            "itemtype": "method",
            "name": "_filterProcessItemsNix",
            "params": [
                {
                    "name": "item",
                    "description": "Item to check",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Item or falsy",
                "type": "String|bool"
            },
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 705,
            "description": "Lists all running processes (win only)",
            "itemtype": "method",
            "name": "_processesWin",
            "params": [
                {
                    "name": "callback",
                    "description": "Receives the process object as the only callback argument",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 719,
            "description": "Deserializes the process list on win",
            "itemtype": "method",
            "name": "_processListWin",
            "params": [
                {
                    "name": "callback",
                    "description": "Callback to be executed after the list has been transformed",
                    "type": "Function"
                },
                {
                    "name": "err",
                    "description": "Error if error, else null",
                    "type": "Object|null"
                },
                {
                    "name": "stdout",
                    "description": "Output of the process list command",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 758,
            "description": "Processes (transforms) the list of processes",
            "itemtype": "method",
            "name": "_filterProcessItemsWin",
            "params": [
                {
                    "name": "result",
                    "description": "Reference to the result process list",
                    "type": "Array"
                },
                {
                    "name": "process",
                    "description": "Single piece of process information",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 777,
            "description": "Filters empty lines out of the process result",
            "itemtype": "method",
            "name": "_splitProcessListWin",
            "params": [
                {
                    "name": "p",
                    "description": "Reference to the process list",
                    "type": "Array"
                },
                {
                    "name": "line",
                    "description": "Process item",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        },
        {
            "file": "index.js",
            "line": 794,
            "description": "Kills a process (based on a PID)\nthat was not opened BEFORE Dalek has\nbeen started",
            "itemtype": "method",
            "name": "_killWindows",
            "params": [
                {
                    "name": "pid",
                    "description": "Process id",
                    "type": "Integer"
                }
            ],
            "chainable": 1,
            "access": "private",
            "tagname": "",
            "class": "Browser.ChromeDriver",
            "module": "DalekJS",
            "namespace": "Browser"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: fileoverview",
            "line": " lib/chromedriver.js:3"
        },
        {
            "message": "unknown tag: part",
            "line": " index.js:36"
        },
        {
            "message": "unknown tag: api",
            "line": " index.js:36"
        },
        {
            "message": "Missing item type",
            "line": " lib/chromedriver.js:3"
        },
        {
            "message": "Missing item type\nWhere the chromedriver binary can be found.",
            "line": " lib/chromedriver.js:10"
        },
        {
            "message": "Missing item type\nThe version of chromedriver installed by this package.",
            "line": " lib/chromedriver.js:19"
        }
    ]
}