{
    "project": {
        "name": "dalek-reporter-json",
        "description": "JSON reporter for the Dalekjs testing framework",
        "version": "0.0.1",
        "url": "http://dalekjs.com"
    },
    "files": {
        "index.js": {
            "name": "index.js",
            "modules": {
                "Reporter": 1
            },
            "classes": {
                "Reporter": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Reporter": {
            "name": "Reporter",
            "submodules": {},
            "classes": {
                "Reporter": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "index.js",
            "line": 34
        }
    },
    "classes": {
        "Reporter": {
            "name": "Reporter",
            "shortname": "Reporter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Reporter",
            "file": "index.js",
            "line": 34,
            "description": "The JSON reporter can produce a file with the results of your testrun.\n\nThe reporter can be installed with the following command:\n```\n$ npm install dalek-reporter-json --save-dev\n```\n\nThe file will follow the following format. This is a first draft and will\ndefinitly change in future versions.\n\n```javascript\n{\n  \"tests\": [\n        {\n          \"id\": \"test806\",\n          \"name\": \"Can get !url (OK, TDD style, message, chained)\",\n          \"browser\": \"Chrome\",\n          \"status\": true,\n          \"passedAssertions\": 1,\n          \"failedAssertions\": 0,\n          \"actions\": [\n              {\n                  \"value\": \"http://localhost:5000/index.html\",\n                  \"type\": \"open\",\n                  \"uuid\": \"6ea84fc0-58bf-4e1f-bb9c-f035c6e6fae2\",\n                  \"kind\": \"action\",\n                  \"isAction\": true\n              },\n              {\n                  \"success\": true,\n                  \"expected\": \"http://localhost:5000/guinea.html\",\n                  \"value\": \"http://localhost:5000/index.html\",\n                  \"message\": \"Url is not whatever\",\n                  \"type\": \"url\",\n                  \"kind\": \"assertion\",\n                  \"isAssertion\": true\n              }\n          ]\n      }\n  ],\n  \"elapsedTime\": {\n      \"minutes\": 1,\n      \"seconds\": 43.328535046\n  },\n  \"status\": true,\n  \"assertions\": 1,\n  \"assertionsFailed\": 0,\n  \"assertionsPassed\": 1\n}\n```\n\nBy default the file will be written to `report/dalek.json`,\nyou can change this by adding a config option to the your Dalekfile\n\n```javascript\n\"json-reporter\": {\n  \"dest\": \"your/folder/your_file.json\"\n}\n```",
            "is_constructor": 1,
            "part": "JSON",
            "api": ""
        }
    },
    "classitems": [
        {
            "file": "index.js",
            "line": 129,
            "description": "Connects to all the event listeners",
            "itemtype": "method",
            "name": "startListening",
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 146,
            "description": "Stores the current browser name",
            "itemtype": "method",
            "name": "runBrowser",
            "params": [
                {
                    "name": "browser",
                    "description": "Browser name",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 159,
            "description": "Generates JSON for an action",
            "itemtype": "method",
            "name": "action",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 173,
            "description": "Generates JSON for an assertion",
            "itemtype": "method",
            "name": "assertion",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 187,
            "description": "Sets up a new testcase",
            "itemtype": "method",
            "name": "testStarted",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 201,
            "description": "Writes data for a finished testcase",
            "itemtype": "method",
            "name": "testFinished",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 222,
            "description": "Serializes JSON and writes file to the file system",
            "itemtype": "method",
            "name": "runnerFinished",
            "params": [
                {
                    "name": "data",
                    "description": "Event data",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Reporter",
            "module": "Reporter"
        },
        {
            "file": "index.js",
            "line": 249,
            "description": "Helper method to generate deeper nested directory structures",
            "itemtype": "method",
            "name": "_recursiveMakeDirSync",
            "params": [
                {
                    "name": "path",
                    "description": "PAth to create",
                    "type": "String"
                }
            ],
            "class": "Reporter",
            "module": "Reporter"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: part",
            "line": " index.js:34"
        },
        {
            "message": "unknown tag: api",
            "line": " index.js:34"
        }
    ]
}